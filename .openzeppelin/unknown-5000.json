{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xFe0D2F86cE8854C1c2081aB9e47D08374afB737F",
    "txHash": "0xd8d2eeb85edd74a0ad2fe3355abbbd39a389de2ab9133ca4876215aa2d88628b"
  },
  "proxies": [
    {
      "address": "0x3f67093dfFD4F0aF4f2918703C92B60ACB7AD78b",
      "txHash": "0xecb87712319148d5e2455c5c16db7f07b2494b7f7c6dee9e1d59c5d83f66e428",
      "kind": "transparent"
    },
    {
      "address": "0x0d3bd40758dF4F79aaD316707FcB809CD4815Ffe",
      "txHash": "0xf385b8d7fe9e9be19efdd9bd616a5f517eea1563a1ec1f4e19731e5d3a249abb",
      "kind": "transparent"
    },
    {
      "address": "0x1bE9d03BfC211D83CFf3ABDb94A75F9Db46e1334",
      "txHash": "0x9639e779f2485867ea16ead874e617ae24c329d7b163ae46820a9b437d9b26b1",
      "kind": "transparent"
    },
    {
      "address": "0x9c05d54645306d4C4EAd6f75846000E1554c0360",
      "txHash": "0xead38b0907797cd74626b3057a894b2c15a7a80fdef5f38921a3b6f5002ba5bc",
      "kind": "transparent"
    },
    {
      "address": "0xb80a1d87654BEf7aD8eB6BBDa3d2309E31D4e598",
      "txHash": "0xc6ae217663795770e9d796624f4eb8794aefe24f095c2a5307a1a185a3f805f0",
      "kind": "transparent"
    },
    {
      "address": "0x9F2825333aa7bC2C98c061924871B6C016e385F3",
      "txHash": "0x30dfd08e60ec4535b65eda1d383b94fdd36dfdb6b25ce3b08d51aac84c1c54a3",
      "kind": "transparent"
    },
    {
      "address": "0xF4ACCD20bFED4dFFe06d4C85A7f9924b1d5dA819",
      "txHash": "0x908a2f8c82d0b97cfcaefaee85ef314caed78cf562af1f10b2f59672567f7f68",
      "kind": "transparent"
    },
    {
      "address": "0xFf4927e04c6a01868284F5C3fB9cba7F7ca4aeC0",
      "txHash": "0x0c27fb7aa3c5929f3524479a95eb6ed5bf2fa5f8e7f7f55fdcd42db31259d52f",
      "kind": "transparent"
    },
    {
      "address": "0x399508A43d7E2b4451cd344633108b4d84b33B03",
      "txHash": "0x1f6b8a6368ef8e2e8033a3580bfa3cdfbd014f74f153106c0e3561beee1cb901",
      "kind": "transparent"
    },
    {
      "address": "0x73225F88fEEA4E41Fc67E986a95AC61dd7118866",
      "txHash": "0x5330da1f6867616a63f2fa93bce84624b213b00b323e3bdfe30dc6fffb0c12a6",
      "kind": "transparent"
    },
    {
      "address": "0xD2aEE1CE2b4459dE326971DE036E82f1318270AF",
      "txHash": "0x615dccb457a616be29172fcc83afb32b190266bd8980c2156880d1d45739ede0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "946bbeec1ea22aaaeb7c7bd5038bbff42663e67c566214749561898491ffacba": {
      "address": "0xF2753202BA39dD25eA8D6D1D609a9021234943Fc",
      "txHash": "0x3c98bdcbf28653f6935ebcef3c2e407dcf23725d0c7d964d5885d47cb540de54",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2191_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AuthorizationModule",
            "src": "contracts/modules/security/AuthorizationModule.sol:57"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "BaseModule",
            "src": "contracts/modules/wrapper/mandatory/BaseModule.sol:23"
          },
          {
            "label": "terms",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "BaseModule",
            "src": "contracts/modules/wrapper/mandatory/BaseModule.sol:24"
          },
          {
            "label": "information",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "BaseModule",
            "src": "contracts/modules/wrapper/mandatory/BaseModule.sol:25"
          },
          {
            "label": "flag",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BaseModule",
            "src": "contracts/modules/wrapper/mandatory/BaseModule.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BaseModule",
            "src": "contracts/modules/wrapper/mandatory/BaseModule.sol:109"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)50_storage",
            "contract": "PauseModule",
            "src": "contracts/modules/wrapper/mandatory/PauseModule.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MintModule",
            "src": "contracts/modules/wrapper/mandatory/MintModule.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BurnModule",
            "src": "contracts/modules/wrapper/mandatory/BurnModule.sol:51"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "505",
            "type": "t_uint8",
            "contract": "ERC20BaseModule",
            "src": "contracts/modules/wrapper/mandatory/ERC20BaseModule.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "506",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BaseModule",
            "src": "contracts/modules/wrapper/mandatory/ERC20BaseModule.sol:90"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)50_storage",
            "contract": "CMTAT_BASE",
            "src": "contracts/modules/CMTAT_BASE.sol:139"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2191_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)2191_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
