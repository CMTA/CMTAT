{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xf56F6681a1DBdb2eB38B7ECDae8d4ecE0DAf7c7d",
    "txHash": "0x8f692b417b040d79c12a8d49ee69ac739f8be5d89eaf5cb6eab502ff7ebab587"
  },
  "proxies": [
    {
      "address": "0xa5Be9371Ab8C49E96Df2E8F085920823d3E0618c",
      "txHash": "0x4294b604cc110468ff185bf3a30ff84c6855618b8462784eac3fd3e19054cb2a",
      "kind": "transparent"
    },
    {
      "address": "0x3a561cFCd721525CE226bb206b3c2149A826cD00",
      "txHash": "0x9fcb29d3afd42b4bfa767b646a0797272ed4611db3e68e956b162cbe2a1748d8",
      "kind": "transparent"
    },
    {
      "address": "0x62068179e6AC6ecC161C949Caf9f1735f3eB20fB",
      "txHash": "0x9b4f3238f0031f9beeb1cbac1ec69d261cd8306675bb0977f08b1ff961fb3c3b",
      "kind": "transparent"
    },
    {
      "address": "0x399508A43d7E2b4451cd344633108b4d84b33B03",
      "txHash": "0xe1ab1ea53c208a83451842e246e3ace6ac176bfb3237b40c0fb98a2ff2135318",
      "kind": "transparent"
    }
  ],
  "impls": {
    "527abe7b96a06e6737bd957300250d8cbcebde312906a32ad68105263c68d76e": {
      "address": "0xa7Be4B4Bca2F64c6C9CB6f49D7F53824Fa4ABFb4",
      "txHash": "0x9eab1e8da5b40c3a0d3f59ec4bd8ab008461170d5fc7f0ebca0efa371dd82eb1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ValidationModuleInternal",
            "label": "ruleEngine",
            "type": "t_contract(IEIP1404Wrapper)151",
            "src": "..\\project:\\contracts\\modules\\internal\\ValidationModuleInternal.sol:23"
          },
          {
            "contract": "ValidationModuleInternal",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\internal\\ValidationModuleInternal.sol:75"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:116"
          },
          {
            "contract": "EnforcementModuleInternal",
            "label": "_frozen",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\modules\\internal\\EnforcementModuleInternal.sol:38"
          },
          {
            "contract": "EnforcementModuleInternal",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\internal\\EnforcementModuleInternal.sol:91"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)4958_storage)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AuthorizationModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\security\\AuthorizationModule.sol:66"
          },
          {
            "contract": "BaseModule",
            "label": "deployedWithProxy",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:14"
          },
          {
            "contract": "BaseModule",
            "label": "tokenId",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:25"
          },
          {
            "contract": "BaseModule",
            "label": "terms",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:26"
          },
          {
            "contract": "BaseModule",
            "label": "information",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:27"
          },
          {
            "contract": "BaseModule",
            "label": "flag",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:28"
          },
          {
            "contract": "BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:124"
          },
          {
            "contract": "PauseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\PauseModule.sol:67"
          },
          {
            "contract": "MintModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\MintModule.sol:51"
          },
          {
            "contract": "BurnModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BurnModule.sol:51"
          },
          {
            "contract": "EnforcementModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\EnforcementModule.sol:74"
          },
          {
            "contract": "ValidationModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\ValidationModule.sol:140"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\metatx\\ERC2771ContextUpgradeable.sol:50"
          },
          {
            "contract": "MetaTxModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\MetaTxModule.sol:43"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:16"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:107"
          },
          {
            "contract": "DebtBaseModule",
            "label": "debt",
            "type": "t_struct(DebtBase)97_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\DebtModule\\DebtBaseModule.sol:18"
          },
          {
            "contract": "DebtBaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\DebtModule\\DebtBaseModule.sol:257"
          },
          {
            "contract": "CreditEventsModule",
            "label": "creditEvents",
            "type": "t_struct(CreditEvents)104_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\DebtModule\\CreditEventsModule.sol:18"
          },
          {
            "contract": "CreditEventsModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\DebtModule\\CreditEventsModule.sol:93"
          },
          {
            "contract": "CMTAT_BASE",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\CMTAT_BASE.sol:205"
          },
          {
            "contract": "CMTAT_PROXY",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\CMTAT_PROXY.sol:22"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CreditEvents)104_storage": {
            "label": "struct IDebtGlobal.CreditEvents",
            "members": [
              {
                "label": "flagDefault",
                "type": "t_bool"
              },
              {
                "label": "flagRedeemed",
                "type": "t_bool"
              },
              {
                "label": "rating",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(DebtBase)97_storage": {
            "label": "struct IDebtGlobal.DebtBase",
            "members": [
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "parValue",
                "type": "t_uint256"
              },
              {
                "label": "guarantor",
                "type": "t_string_storage"
              },
              {
                "label": "bondHolder",
                "type": "t_string_storage"
              },
              {
                "label": "maturityDate",
                "type": "t_string_storage"
              },
              {
                "label": "interestScheduleFormat",
                "type": "t_string_storage"
              },
              {
                "label": "interestPaymentDate",
                "type": "t_string_storage"
              },
              {
                "label": "dayCountConvention",
                "type": "t_string_storage"
              },
              {
                "label": "businessDayConvention",
                "type": "t_string_storage"
              },
              {
                "label": "publicHolidaysCalendar",
                "type": "t_string_storage"
              },
              {
                "label": "issuanceDate",
                "type": "t_string_storage"
              },
              {
                "label": "couponFrequency",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)4958_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)4958_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_contract(IEIP1404Wrapper)151": {
            "label": "contract IEIP1404Wrapper"
          }
        }
      }
    },
    "b6088faaa7dff761a97ca659b88235128302b39eb14c26e2543a43ddb88b8841": {
      "address": "0xFf4927e04c6a01868284F5C3fB9cba7F7ca4aeC0",
      "txHash": "0xa26ff5188d4c8e5e4b64fddce7e895b22c3d4c1548bc23341a4288d4a570ef42",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)929_storage)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AuthorizationModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\security\\AuthorizationModule.sol:57"
          },
          {
            "contract": "BaseModule",
            "label": "tokenId",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:23"
          },
          {
            "contract": "BaseModule",
            "label": "terms",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:24"
          },
          {
            "contract": "BaseModule",
            "label": "information",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:25"
          },
          {
            "contract": "BaseModule",
            "label": "flag",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:26"
          },
          {
            "contract": "BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:109"
          },
          {
            "contract": "PauseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\PauseModule.sol:67"
          },
          {
            "contract": "MintModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\MintModule.sol:51"
          },
          {
            "contract": "BurnModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BurnModule.sol:51"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:16"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:112"
          },
          {
            "contract": "CMTAT_BASE",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\CMTAT_BASE.sol:136"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)929_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)929_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "5bf36075276312160af508a1eb5efd930b2eb801d13f12af1277345dd81be5cf": {
      "address": "0xF8bb8adA3a43bb1922e062343e89c2545b7C1fE8",
      "txHash": "0x811b40731f1890f0172a07dfbc97e06af102e057edca9fb12369a5765ad9a6df",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)934_storage)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AuthorizationModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\security\\AuthorizationModule.sol:57"
          },
          {
            "contract": "BaseModule",
            "label": "tokenId",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:23"
          },
          {
            "contract": "BaseModule",
            "label": "terms",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:24"
          },
          {
            "contract": "BaseModule",
            "label": "information",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:25"
          },
          {
            "contract": "BaseModule",
            "label": "flag",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:26"
          },
          {
            "contract": "BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:109"
          },
          {
            "contract": "PauseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\PauseModule.sol:67"
          },
          {
            "contract": "MintModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\MintModule.sol:51"
          },
          {
            "contract": "BurnModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BurnModule.sol:51"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:16"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:112"
          },
          {
            "contract": "CMTAT_BASE",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\CMTAT_BASE.sol:139"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)934_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)934_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
