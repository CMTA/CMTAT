{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7BAf2520e598FDA64Cb48E106f6f7cdf2D68C747",
    "txHash": "0xd294389aa1c96e2bf0a6038d3467376e02754a89322ff6c89efc80e0ca109b53"
  },
  "proxies": [
    {
      "address": "0x2758d3aCb6Cf713E0c48C18348eC951260dA6d80",
      "txHash": "0xaf60d888bcad97d9a8782c2ab6070ab58404106920b6fc32040b94b6e118f05c",
      "kind": "transparent"
    },
    {
      "address": "0xbe0577108d4c928A5dd8FecDa2Cd7c189a97A517",
      "txHash": "0xbd3da78689bb89b75dac2d0a3489d4d38b07b092621ad73516d592130b6e1c34",
      "kind": "transparent"
    },
    {
      "address": "0x8e984a03B5A9C0240434ad56451a59679e15062f",
      "txHash": "0x8246b306f37739c9cc7d080ad75f5c6021b1675099659de38bade136f25e7e9c",
      "kind": "transparent"
    },
    {
      "address": "0x80583c4a54102D867eB6D5737fbF53e26319b2F5",
      "txHash": "0x748a0aaac54c7b5125ea5d392da9f1d7f0ce519de1aa054d0c2dd0e4c0200fbd",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a4e218b2771ac3f873bc00581884d5042a6596aabce04b84f6ac99bcf6f9a0c3": {
      "address": "0x97C1d146C71F22E797B5b4F07D0855A576EbCEd8",
      "txHash": "0x3c425b7c067aff6e3eef1288f66940fa7ebbcff83bff7d0617ddc93d68b51bb0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ValidationModuleInternal",
            "label": "ruleEngine",
            "type": "t_contract(IEIP1404Wrapper)151",
            "src": "..\\project:\\contracts\\modules\\internal\\ValidationModuleInternal.sol:23"
          },
          {
            "contract": "ValidationModuleInternal",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\internal\\ValidationModuleInternal.sol:75"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:116"
          },
          {
            "contract": "EnforcementModuleInternal",
            "label": "_frozen",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\modules\\internal\\EnforcementModuleInternal.sol:38"
          },
          {
            "contract": "EnforcementModuleInternal",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\internal\\EnforcementModuleInternal.sol:91"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)4939_storage)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AuthorizationModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\security\\AuthorizationModule.sol:66"
          },
          {
            "contract": "BaseModule",
            "label": "deployedWithProxy",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:14"
          },
          {
            "contract": "BaseModule",
            "label": "tokenId",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:25"
          },
          {
            "contract": "BaseModule",
            "label": "terms",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:26"
          },
          {
            "contract": "BaseModule",
            "label": "information",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:27"
          },
          {
            "contract": "BaseModule",
            "label": "flag",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:28"
          },
          {
            "contract": "BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:124"
          },
          {
            "contract": "PauseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\PauseModule.sol:67"
          },
          {
            "contract": "MintModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\MintModule.sol:51"
          },
          {
            "contract": "BurnModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BurnModule.sol:51"
          },
          {
            "contract": "EnforcementModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\EnforcementModule.sol:74"
          },
          {
            "contract": "ValidationModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\ValidationModule.sol:140"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\metatx\\ERC2771ContextUpgradeable.sol:50"
          },
          {
            "contract": "MetaTxModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\MetaTxModule.sol:43"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:16"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:112"
          },
          {
            "contract": "DebtBaseModule",
            "label": "debt",
            "type": "t_struct(DebtBase)97_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\DebtModule\\DebtBaseModule.sol:18"
          },
          {
            "contract": "DebtBaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\DebtModule\\DebtBaseModule.sol:259"
          },
          {
            "contract": "CreditEventsModule",
            "label": "creditEvents",
            "type": "t_struct(CreditEvents)104_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\DebtModule\\CreditEventsModule.sol:18"
          },
          {
            "contract": "CreditEventsModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\optional\\DebtModule\\CreditEventsModule.sol:94"
          },
          {
            "contract": "CMTAT_BASE",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\CMTAT_BASE.sol:205"
          },
          {
            "contract": "CMTAT_PROXY",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\CMTAT_PROXY.sol:22"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(CreditEvents)104_storage": {
            "label": "struct IDebtGlobal.CreditEvents",
            "members": [
              {
                "label": "flagDefault",
                "type": "t_bool"
              },
              {
                "label": "flagRedeemed",
                "type": "t_bool"
              },
              {
                "label": "rating",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(DebtBase)97_storage": {
            "label": "struct IDebtGlobal.DebtBase",
            "members": [
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "parValue",
                "type": "t_uint256"
              },
              {
                "label": "guarantor",
                "type": "t_string_storage"
              },
              {
                "label": "bondHolder",
                "type": "t_string_storage"
              },
              {
                "label": "maturityDate",
                "type": "t_string_storage"
              },
              {
                "label": "interestScheduleFormat",
                "type": "t_string_storage"
              },
              {
                "label": "interestPaymentDate",
                "type": "t_string_storage"
              },
              {
                "label": "dayCountConvention",
                "type": "t_string_storage"
              },
              {
                "label": "businessDayConvention",
                "type": "t_string_storage"
              },
              {
                "label": "publicHolidaysCalendar",
                "type": "t_string_storage"
              },
              {
                "label": "issuanceDate",
                "type": "t_string_storage"
              },
              {
                "label": "couponFrequency",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)4939_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)4939_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_contract(IEIP1404Wrapper)151": {
            "label": "contract IEIP1404Wrapper"
          }
        }
      }
    },
    "b6088faaa7dff761a97ca659b88235128302b39eb14c26e2543a43ddb88b8841": {
      "address": "0x1F19cb077CB274EB999fa01859b4369Ea32Ca005",
      "txHash": "0x7a549b4603c7d151381c320e080cb05ab9e4a6fa2daa483e885585bbf02c4486",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)929_storage)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AuthorizationModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\security\\AuthorizationModule.sol:57"
          },
          {
            "contract": "BaseModule",
            "label": "tokenId",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:23"
          },
          {
            "contract": "BaseModule",
            "label": "terms",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:24"
          },
          {
            "contract": "BaseModule",
            "label": "information",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:25"
          },
          {
            "contract": "BaseModule",
            "label": "flag",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:26"
          },
          {
            "contract": "BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:109"
          },
          {
            "contract": "PauseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\PauseModule.sol:67"
          },
          {
            "contract": "MintModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\MintModule.sol:51"
          },
          {
            "contract": "BurnModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BurnModule.sol:51"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:16"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:112"
          },
          {
            "contract": "CMTAT_BASE",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\CMTAT_BASE.sol:136"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)929_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)929_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "5bf36075276312160af508a1eb5efd930b2eb801d13f12af1277345dd81be5cf": {
      "address": "0x601dbcd010eCcdb41df51B7A78dB24e3f923D11F",
      "txHash": "0xbeedf994f478ec33407eee03a031dad54548a7e07f13439ff9559fb2ecc54c25",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\security\\PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)934_storage)",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\project:\\openzeppelin-contracts-upgradeable\\contracts\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AuthorizationModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\security\\AuthorizationModule.sol:57"
          },
          {
            "contract": "BaseModule",
            "label": "tokenId",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:23"
          },
          {
            "contract": "BaseModule",
            "label": "terms",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:24"
          },
          {
            "contract": "BaseModule",
            "label": "information",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:25"
          },
          {
            "contract": "BaseModule",
            "label": "flag",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:26"
          },
          {
            "contract": "BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BaseModule.sol:109"
          },
          {
            "contract": "PauseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\PauseModule.sol:67"
          },
          {
            "contract": "MintModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\MintModule.sol:51"
          },
          {
            "contract": "BurnModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\BurnModule.sol:51"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:16"
          },
          {
            "contract": "ERC20BaseModule",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\wrapper\\mandatory\\ERC20BaseModule.sol:112"
          },
          {
            "contract": "CMTAT_BASE",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\modules\\CMTAT_BASE.sol:139"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)934_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)934_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
