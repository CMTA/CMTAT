{
  "name": "CMTAT",
  "version": "0.1.0",
  "description": "CMTA smart contracts",
  "files": [
    "contracts",
    "test"
  ],
  "scripts": {
    "test": "npx truffle test",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:sol": "solium -d .",
    "lint:sol:fix": "solium -d . --fix",
    "lint:all": "npm run lint && npm run lint:sol",
    "lint:all:fix": "npm run lint:fix && npm rIt would be good if the Rule Engine contract is implemented using the Factory pattern. it will save future deployment gas and make it easier to deploy  new rule engines https://dev.to/jamiescript/design-patterns-in-solidity-1i28#factoryun lint:sol:fix",
    "console": "truffle console",
    "coverage": "npx solidity-coverage"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/CMTA/CMTAT.git"
  },
  "keywords": [
    "solidity",
    "ethereum",
    "smart",
    "contracts",
    "security",
    "scai"
  ],
  "author": "CMTA",
  "license": "MPL",
  "bugs": {
    "url": "https://github.com/CMTA/CMTAT/issues"
  },
  "homepage": "https://github.com/CMTA/CMTAT",
  "devDependencies": {
    "@openzeppelin/test-helpers": "^0.5.16",
    "chai": "^4.3.6",
    "coveralls": "^3.1.1",
    "dotenv": "^6.1.0",
    "eslint": "^8.23.1",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-node": "^8.0.0",
    "eslint-plugin-promise": "^6.0.1",
    "ethereumjs-util": "^6.2.1",
    "ethjs-abi": "^0.2.1",
    "ethlint": "^1.2.5",
    "solc": "^0.7.6",
    "solidity-coverage": "^0.8.2",
    "truffle": "^5.5.31",
    "truffle-flattener": "^1.6.0",
    "web3": "^1.8.0"
  },
  "dependencies": {
    "@metamask/eth-sig-util": "^5.0.0",
    "@openzeppelin/contracts": "^4.7.3",
    "ethereumjs-wallet": "^1.0.2"
  }
}
