//SPDX-License-Identifier: MPL-2.0

pragma solidity ^0.8.20;

/* ==== Module === */

import {AccessControlUpgradeable} from "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol";

/* ==== Engine === */
import {IDebtEngine, ICMTATDebt, ICMTATCreditEvents} from "../../../interfaces/engine/IDebtEngine.sol";
import {IDebtModule} from "../../../interfaces/modules/IDebtModule.sol";
import {DebtModuleCommon} from "./DebtModuleCommon.sol";
/**
 * @title Debt module
 * @dev 
 *
 * Set Debt and CreditEvents info
 */
abstract contract DebtModule is DebtModuleCommon, AccessControlUpgradeable, IDebtModule {
    /*//////////////////////////////////////////////////////////////
                            PUBLIC/EXTERNAL FUNCTIONS
    //////////////////////////////////////////////////////////////*/    

    /*
    * @notice Set all attributes of creditEvents
    * The values of all attributes will be changed even if the new values are the same as the current ones
    */
    function setCreditEvents(
       CreditEvents calldata creditEvents_
    ) public onlyRole(DEBT_ROLE) {
        DebtModuleStorage storage $ = _getDebtModuleStorage();
        $._creditEvents = creditEvents_;
        emit CreditEventsLogEvent();
    }

    function setDebt(
          DebtInformation calldata debt_
    ) public virtual override(IDebtModule) onlyRole(DEBT_ROLE) {
        DebtModuleStorage storage $ = _getDebtModuleStorage();
        $._debt = debt_;
        emit DebtLogEvent();
    }

    /**
    * @inheritdoc IDebtModule
    */
    function setDebtInstrument(
          DebtInstrument calldata debtInstrument_
    ) public virtual override(IDebtModule) onlyRole(DEBT_ROLE) {
        DebtModuleStorage storage $ = _getDebtModuleStorage();
        $._debt.debtInstrument = debtInstrument_;
        emit DebtInstrumentLogEvent();
    }
    
    /**
    * @inheritdoc ICMTATDebt
    */
    function debt() public view virtual override(ICMTATDebt) returns(DebtInformation memory debtInformationResult){
        DebtModuleStorage storage $ = _getDebtModuleStorage();
        debtInformationResult = $._debt;
    }

    function creditEvents() public view virtual override(ICMTATCreditEvents) returns(CreditEvents memory creditEventsResult){
        DebtModuleStorage storage $ = _getDebtModuleStorage();
        creditEventsResult = $._creditEvents;
    }
}
